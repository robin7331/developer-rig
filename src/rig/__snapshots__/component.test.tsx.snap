// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RigComponent /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RigComponent
    saveManifest={[Function]}
    userLogin={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(RigNavComponent)
          configHandler={[Function]}
          error=""
          liveConfigHandler={[Function]}
          openConfigurationsHandler={[Function]}
          openProductManagementHandler={[Function]}
          selectedView="Extension Views"
          viewerHandler={[Function]}
/>,
        <div>
          <ExtensionViewContainer
                    deleteExtensionViewHandler={[Function]}
                    extension={Object {}}
                    extensionViews={Array []}
                    mode="viewer"
                    openEditViewHandler={[Function]}
                    openExtensionViewHandler={[Function]}
          />
          <SignInDialog
                    closeSignInDialog={[Function]}
                    show={true}
          />
          <Console />
</div>,
      ],
      "className": "rig-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "configHandler": [Function],
          "error": "",
          "liveConfigHandler": [Function],
          "openConfigurationsHandler": [Function],
          "openProductManagementHandler": [Function],
          "selectedView": "Extension Views",
          "viewerHandler": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ExtensionViewContainer
              deleteExtensionViewHandler={[Function]}
              extension={Object {}}
              extensionViews={Array []}
              mode="viewer"
              openEditViewHandler={[Function]}
              openExtensionViewHandler={[Function]}
/>,
            false,
            false,
            false,
            <SignInDialog
              closeSignInDialog={[Function]}
              show={true}
/>,
            <Console />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "deleteExtensionViewHandler": [Function],
              "extension": Object {},
              "extensionViews": Array [],
              "mode": "viewer",
              "openEditViewHandler": [Function],
              "openExtensionViewHandler": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "closeSignInDialog": [Function],
              "show": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(RigNavComponent)
            configHandler={[Function]}
            error=""
            liveConfigHandler={[Function]}
            openConfigurationsHandler={[Function]}
            openProductManagementHandler={[Function]}
            selectedView="Extension Views"
            viewerHandler={[Function]}
/>,
          <div>
            <ExtensionViewContainer
                        deleteExtensionViewHandler={[Function]}
                        extension={Object {}}
                        extensionViews={Array []}
                        mode="viewer"
                        openEditViewHandler={[Function]}
                        openExtensionViewHandler={[Function]}
            />
            <SignInDialog
                        closeSignInDialog={[Function]}
                        show={true}
            />
            <Console />
</div>,
        ],
        "className": "rig-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "configHandler": [Function],
            "error": "",
            "liveConfigHandler": [Function],
            "openConfigurationsHandler": [Function],
            "openProductManagementHandler": [Function],
            "selectedView": "Extension Views",
            "viewerHandler": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ExtensionViewContainer
                deleteExtensionViewHandler={[Function]}
                extension={Object {}}
                extensionViews={Array []}
                mode="viewer"
                openEditViewHandler={[Function]}
                openExtensionViewHandler={[Function]}
/>,
              false,
              false,
              false,
              <SignInDialog
                closeSignInDialog={[Function]}
                show={true}
/>,
              <Console />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "deleteExtensionViewHandler": [Function],
                "extension": Object {},
                "extensionViews": Array [],
                "mode": "viewer",
                "openEditViewHandler": [Function],
                "openExtensionViewHandler": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
            false,
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "closeSignInDialog": [Function],
                "show": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<RigComponent /> renders extension view correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RigComponent
    saveManifest={[Function]}
    userLogin={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(RigNavComponent)
          configHandler={[Function]}
          error=""
          liveConfigHandler={[Function]}
          openConfigurationsHandler={[Function]}
          openProductManagementHandler={[Function]}
          selectedView="Extension Views"
          viewerHandler={[Function]}
/>,
        <div>
          <ExtensionViewContainer
                    deleteExtensionViewHandler={[Function]}
                    extension={Object {}}
                    extensionViews={
                              Array [
                                        Object {
                                          "extension": Object {
                                            "authorName": "test",
                                            "bitsEnabled": false,
                                            "channelId": "channelId",
                                            "description": "description",
                                            "iconUrl": "icon_url",
                                            "id": "id",
                                            "name": "name",
                                            "requestIdentityLink": false,
                                            "sku": "sku",
                                            "state": "state",
                                            "summary": "summary",
                                            "token": "token",
                                            "vendorCode": "vendorCode",
                                            "version": "0.1",
                                            "views": Object {
                                              "component": Object {
                                                "aspectHeight": 3000,
                                                "aspectWidth": 2500,
                                                "viewerUrl": "test",
                                                "zoom": false,
                                              },
                                              "config": Object {
                                                "viewerUrl": "test",
                                              },
                                              "liveConfig": Object {
                                                "viewerUrl": "test",
                                              },
                                              "panel": Object {
                                                "viewerUrl": "test",
                                              },
                                            },
                                            "whitelistedConfigUrls": Array [
                                              "foo",
                                            ],
                                            "whitelistedPanelUrls": Array [
                                              "bar",
                                            ],
                                          },
                                          "id": "1",
                                          "linked": false,
                                          "mode": "viewer",
                                          "orientation": "Portrait",
                                          "role": "Logged-Out Viewer",
                                          "type": "Panel",
                                          "x": 0,
                                          "y": 0,
                                        },
                                      ]
                    }
                    mode="viewer"
                    openEditViewHandler={[Function]}
                    openExtensionViewHandler={[Function]}
          />
          <SignInDialog
                    closeSignInDialog={[Function]}
                    show={true}
          />
          <Console />
</div>,
      ],
      "className": "rig-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "configHandler": [Function],
          "error": "",
          "liveConfigHandler": [Function],
          "openConfigurationsHandler": [Function],
          "openProductManagementHandler": [Function],
          "selectedView": "Extension Views",
          "viewerHandler": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ExtensionViewContainer
              deleteExtensionViewHandler={[Function]}
              extension={Object {}}
              extensionViews={
                            Array [
                                          Object {
                                            "extension": Object {
                                              "authorName": "test",
                                              "bitsEnabled": false,
                                              "channelId": "channelId",
                                              "description": "description",
                                              "iconUrl": "icon_url",
                                              "id": "id",
                                              "name": "name",
                                              "requestIdentityLink": false,
                                              "sku": "sku",
                                              "state": "state",
                                              "summary": "summary",
                                              "token": "token",
                                              "vendorCode": "vendorCode",
                                              "version": "0.1",
                                              "views": Object {
                                                "component": Object {
                                                  "aspectHeight": 3000,
                                                  "aspectWidth": 2500,
                                                  "viewerUrl": "test",
                                                  "zoom": false,
                                                },
                                                "config": Object {
                                                  "viewerUrl": "test",
                                                },
                                                "liveConfig": Object {
                                                  "viewerUrl": "test",
                                                },
                                                "panel": Object {
                                                  "viewerUrl": "test",
                                                },
                                              },
                                              "whitelistedConfigUrls": Array [
                                                "foo",
                                              ],
                                              "whitelistedPanelUrls": Array [
                                                "bar",
                                              ],
                                            },
                                            "id": "1",
                                            "linked": false,
                                            "mode": "viewer",
                                            "orientation": "Portrait",
                                            "role": "Logged-Out Viewer",
                                            "type": "Panel",
                                            "x": 0,
                                            "y": 0,
                                          },
                                        ]
              }
              mode="viewer"
              openEditViewHandler={[Function]}
              openExtensionViewHandler={[Function]}
/>,
            false,
            false,
            false,
            <SignInDialog
              closeSignInDialog={[Function]}
              show={true}
/>,
            <Console />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "deleteExtensionViewHandler": [Function],
              "extension": Object {},
              "extensionViews": Array [
                Object {
                  "extension": Object {
                    "authorName": "test",
                    "bitsEnabled": false,
                    "channelId": "channelId",
                    "description": "description",
                    "iconUrl": "icon_url",
                    "id": "id",
                    "name": "name",
                    "requestIdentityLink": false,
                    "sku": "sku",
                    "state": "state",
                    "summary": "summary",
                    "token": "token",
                    "vendorCode": "vendorCode",
                    "version": "0.1",
                    "views": Object {
                      "component": Object {
                        "aspectHeight": 3000,
                        "aspectWidth": 2500,
                        "viewerUrl": "test",
                        "zoom": false,
                      },
                      "config": Object {
                        "viewerUrl": "test",
                      },
                      "liveConfig": Object {
                        "viewerUrl": "test",
                      },
                      "panel": Object {
                        "viewerUrl": "test",
                      },
                    },
                    "whitelistedConfigUrls": Array [
                      "foo",
                    ],
                    "whitelistedPanelUrls": Array [
                      "bar",
                    ],
                  },
                  "id": "1",
                  "linked": false,
                  "mode": "viewer",
                  "orientation": "Portrait",
                  "role": "Logged-Out Viewer",
                  "type": "Panel",
                  "x": 0,
                  "y": 0,
                },
              ],
              "mode": "viewer",
              "openEditViewHandler": [Function],
              "openExtensionViewHandler": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "closeSignInDialog": [Function],
              "show": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(RigNavComponent)
            configHandler={[Function]}
            error=""
            liveConfigHandler={[Function]}
            openConfigurationsHandler={[Function]}
            openProductManagementHandler={[Function]}
            selectedView="Extension Views"
            viewerHandler={[Function]}
/>,
          <div>
            <ExtensionViewContainer
                        deleteExtensionViewHandler={[Function]}
                        extension={Object {}}
                        extensionViews={
                                    Array [
                                                Object {
                                                  "extension": Object {
                                                    "authorName": "test",
                                                    "bitsEnabled": false,
                                                    "channelId": "channelId",
                                                    "description": "description",
                                                    "iconUrl": "icon_url",
                                                    "id": "id",
                                                    "name": "name",
                                                    "requestIdentityLink": false,
                                                    "sku": "sku",
                                                    "state": "state",
                                                    "summary": "summary",
                                                    "token": "token",
                                                    "vendorCode": "vendorCode",
                                                    "version": "0.1",
                                                    "views": Object {
                                                      "component": Object {
                                                        "aspectHeight": 3000,
                                                        "aspectWidth": 2500,
                                                        "viewerUrl": "test",
                                                        "zoom": false,
                                                      },
                                                      "config": Object {
                                                        "viewerUrl": "test",
                                                      },
                                                      "liveConfig": Object {
                                                        "viewerUrl": "test",
                                                      },
                                                      "panel": Object {
                                                        "viewerUrl": "test",
                                                      },
                                                    },
                                                    "whitelistedConfigUrls": Array [
                                                      "foo",
                                                    ],
                                                    "whitelistedPanelUrls": Array [
                                                      "bar",
                                                    ],
                                                  },
                                                  "id": "1",
                                                  "linked": false,
                                                  "mode": "viewer",
                                                  "orientation": "Portrait",
                                                  "role": "Logged-Out Viewer",
                                                  "type": "Panel",
                                                  "x": 0,
                                                  "y": 0,
                                                },
                                              ]
                        }
                        mode="viewer"
                        openEditViewHandler={[Function]}
                        openExtensionViewHandler={[Function]}
            />
            <SignInDialog
                        closeSignInDialog={[Function]}
                        show={true}
            />
            <Console />
</div>,
        ],
        "className": "rig-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "configHandler": [Function],
            "error": "",
            "liveConfigHandler": [Function],
            "openConfigurationsHandler": [Function],
            "openProductManagementHandler": [Function],
            "selectedView": "Extension Views",
            "viewerHandler": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ExtensionViewContainer
                deleteExtensionViewHandler={[Function]}
                extension={Object {}}
                extensionViews={
                                Array [
                                                Object {
                                                  "extension": Object {
                                                    "authorName": "test",
                                                    "bitsEnabled": false,
                                                    "channelId": "channelId",
                                                    "description": "description",
                                                    "iconUrl": "icon_url",
                                                    "id": "id",
                                                    "name": "name",
                                                    "requestIdentityLink": false,
                                                    "sku": "sku",
                                                    "state": "state",
                                                    "summary": "summary",
                                                    "token": "token",
                                                    "vendorCode": "vendorCode",
                                                    "version": "0.1",
                                                    "views": Object {
                                                      "component": Object {
                                                        "aspectHeight": 3000,
                                                        "aspectWidth": 2500,
                                                        "viewerUrl": "test",
                                                        "zoom": false,
                                                      },
                                                      "config": Object {
                                                        "viewerUrl": "test",
                                                      },
                                                      "liveConfig": Object {
                                                        "viewerUrl": "test",
                                                      },
                                                      "panel": Object {
                                                        "viewerUrl": "test",
                                                      },
                                                    },
                                                    "whitelistedConfigUrls": Array [
                                                      "foo",
                                                    ],
                                                    "whitelistedPanelUrls": Array [
                                                      "bar",
                                                    ],
                                                  },
                                                  "id": "1",
                                                  "linked": false,
                                                  "mode": "viewer",
                                                  "orientation": "Portrait",
                                                  "role": "Logged-Out Viewer",
                                                  "type": "Panel",
                                                  "x": 0,
                                                  "y": 0,
                                                },
                                              ]
                }
                mode="viewer"
                openEditViewHandler={[Function]}
                openExtensionViewHandler={[Function]}
/>,
              false,
              false,
              false,
              <SignInDialog
                closeSignInDialog={[Function]}
                show={true}
/>,
              <Console />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "deleteExtensionViewHandler": [Function],
                "extension": Object {},
                "extensionViews": Array [
                  Object {
                    "extension": Object {
                      "authorName": "test",
                      "bitsEnabled": false,
                      "channelId": "channelId",
                      "description": "description",
                      "iconUrl": "icon_url",
                      "id": "id",
                      "name": "name",
                      "requestIdentityLink": false,
                      "sku": "sku",
                      "state": "state",
                      "summary": "summary",
                      "token": "token",
                      "vendorCode": "vendorCode",
                      "version": "0.1",
                      "views": Object {
                        "component": Object {
                          "aspectHeight": 3000,
                          "aspectWidth": 2500,
                          "viewerUrl": "test",
                          "zoom": false,
                        },
                        "config": Object {
                          "viewerUrl": "test",
                        },
                        "liveConfig": Object {
                          "viewerUrl": "test",
                        },
                        "panel": Object {
                          "viewerUrl": "test",
                        },
                      },
                      "whitelistedConfigUrls": Array [
                        "foo",
                      ],
                      "whitelistedPanelUrls": Array [
                        "bar",
                      ],
                    },
                    "id": "1",
                    "linked": false,
                    "mode": "viewer",
                    "orientation": "Portrait",
                    "role": "Logged-Out Viewer",
                    "type": "Panel",
                    "x": 0,
                    "y": 0,
                  },
                ],
                "mode": "viewer",
                "openEditViewHandler": [Function],
                "openExtensionViewHandler": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
            false,
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "closeSignInDialog": [Function],
                "show": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
